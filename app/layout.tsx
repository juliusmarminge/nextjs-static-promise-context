import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { TRPCReactProvider } from "@/trpc/react";
import { headers } from "next/headers";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const dummyheaders = () =>
  new Headers([
    ["host", "localhost:3000"],
    ["connection", "keep-alive"],
    ["sec-ch-ua", '"Not_A Brand";v="8", "Chromium";v="120"'],
    ["sec-ch-ua-mobile", "?0"],
    ["sec-ch-ua-platform", '"macOS"'],
    ["dnt", "1"],
    ["upgrade-insecure-requests", "1"],
    [
      "user-agent",
      "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
    ],
    [
      "accept",
      "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
    ],
    ["sec-fetch-site", "none"],
    ["sec-fetch-mode", "navigate"],
    ["sec-fetch-user", "?1"],
    ["sec-fetch-dest", "document"],
    ["accept-encoding", "gzip, deflate, br"],
    ["accept-language", "en-US,en;q=0.9"],
  ]);

const getHeaders = () => {
  /**
   * Using `headers()` refuses static rendering on any page
   */
  return Promise.resolve(headers());

  /**
   * Mocking some headers that's not dynamic, static rendering works
   */
  return Promise.resolve(dummyheaders());
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <TRPCReactProvider headersPromise={getHeaders()}>
          {children}
        </TRPCReactProvider>
      </body>
    </html>
  );
}
